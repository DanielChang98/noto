{"version":3,"sources":["firebase.js","contexts/AuthContext.js","components/PrivateRoute.js","components/Signup.js","components/Login.js","components/ForgotPassword.js","components/Dashboard.js","components/EditProfile.js","components/Timer.js","components/App.js","index.js"],"names":["app","firebase","initializeApp","apiKey","authDomain","databaseURL","projectId","storageBucket","messagingSenderId","appId","auth","AuthContext","React","createContext","useAuth","useContext","AuthProvider","children","useState","currentUser","setCurrentUser","loading","setLoading","useEffect","onAuthStateChanged","user","value","login","email","password","signInWithEmailAndPassword","signup","createUserWithEmailAndPassword","logout","signOut","resetPassword","sendPasswordResetEmail","updateProfile","name","displayName","updatePassword","Provider","PrivateRoute","Component","component","rest","render","props","to","Signup","useRef","emailRef","passwordRef","passwordConfirmRef","error","setError","history","useHistory","e","a","preventDefault","current","promises","Promise","all","then","push","catch","finally","Container","className","style","minHeight","maxWidth","Card","Body","Alert","variant","Form","onSubmit","Group","id","Control","type","ref","placeholder","required","Button","disabled","Login","Label","ForgotPassword","message","setMessage","Dashboard","console","log","AppBar","Toolbar","List","title","path","map","href","key","ListItem","ListItemText","primary","IconButton","color","onClick","ExitToApp","EditProfile","nameRef","defaultValue","TimerPage","state","time","play","timeType","estimated","setTimeForCode","setTime","bind","setTimeForSocial","setTimeForCoffee","reset","elapseTime","this","setDefaultTime","Notification","requestPermission","alert","newState","setState","getTitle","seconds","m","Math","floor","s","timeTypes","getFormatTypes","i","length","timeObj","clearInterval","interval","setInterval","restartInterval","resetFor","format","newTime","gotoDirection","currentPosition","newMode","item","element","target","checked","localStorage","setItem","getItem","refs","vibrate","window","navigator","audio","Audio","setTimeout","pause","notification","icon","lang","body","Date","startIcon","onPress","App","exact","Timer","ReactDOM","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.fc4c831f.chunk.js","sourcesContent":["import firebase from \"firebase/app\"\r\nimport \"firebase/auth\"\r\n\r\nconst app = firebase.initializeApp({\r\n    apiKey: \"AIzaSyANHN64tf8qlSHgrr6U8nSr2aZPx2ihGoU\",\r\n    authDomain: \"noto-13.firebaseapp.com\",\r\n    databaseURL: \"https://noto-13.firebaseio.com\",\r\n    projectId: \"noto-13\",\r\n    storageBucket: \"noto-13.appspot.com\",\r\n    messagingSenderId: \"1093198433828\",\r\n    appId: \"1:1093198433828:web:9a021bad9e842db21112b1\"\r\n})\r\n\r\nexport const auth = app.auth()\r\nexport default app\r\n","//functions for user authentication\r\n\r\nimport React, { useContext, useState, useEffect } from \"react\"\r\nimport { auth } from \"../firebase\"\r\n\r\nconst AuthContext = React.createContext()\r\n\r\nexport function useAuth() {\r\n  return useContext(AuthContext)\r\n}\r\n\r\nexport function AuthProvider({ children }) {\r\n  const [currentUser, setCurrentUser] = useState()\r\n  const [loading, setLoading] = useState(true)\r\n\r\n  //function for sign up\r\n  function signup(email, password) {\r\n    return auth.createUserWithEmailAndPassword(email, password) \r\n  }\r\n\r\n  //function for login\r\n  function login(email, password) {\r\n    return auth.signInWithEmailAndPassword(email, password)\r\n  }\r\n  //function for logout\r\n  function logout() {\r\n    return auth.signOut()\r\n  }\r\n  //function for sending reset password email\r\n  function resetPassword(email) {\r\n    return auth.sendPasswordResetEmail(email)\r\n  }\r\n  //function for updating name\r\n  function updateProfile(name) {\r\n    return currentUser.updateProfile({\r\n      displayName: name\r\n    })\r\n  }\r\n\r\n  //function for updating password\r\n  function updatePassword(password) {\r\n    return currentUser.updatePassword(password)\r\n  }\r\n\r\n  //only run once, set current user\r\n  useEffect(() => {\r\n    const unsubscribe = auth.onAuthStateChanged(user => {\r\n      setCurrentUser(user)\r\n      setLoading(false)\r\n    })\r\n\r\n    return unsubscribe\r\n  }, [])\r\n\r\n  const value = {\r\n    currentUser,\r\n    login,\r\n    signup,\r\n    logout,\r\n    resetPassword,\r\n    updateProfile,\r\n    updatePassword\r\n  }\r\n\r\n  return (\r\n    <AuthContext.Provider value={value}>\r\n      {!loading && children}\r\n    </AuthContext.Provider>\r\n  )\r\n}\r\n","//prevent unauthorised access before log in\r\n\r\nimport React from \"react\"\r\nimport { Route, Redirect } from \"react-router-dom\"\r\nimport { useAuth } from \"../contexts/AuthContext\"\r\n\r\nexport default function PrivateRoute({ component: Component, ...rest }) {\r\n  const { currentUser } = useAuth()\r\n\r\n  return (\r\n    <Route\r\n      {...rest}\r\n      render={props => {\r\n        return currentUser ? <Component {...props} /> : <Redirect to=\"/login\" />\r\n      }}\r\n    ></Route>\r\n  )\r\n}\r\n","//sign up \r\n\r\nimport React, { useRef, useState } from \"react\"\r\nimport { Container, Form, Button, Card, Alert } from \"react-bootstrap\"\r\nimport { useAuth } from \"../contexts/AuthContext\"\r\nimport { Link, useHistory } from \"react-router-dom\"\r\nimport \"bootstrap/dist/css/bootstrap.min.css\"\r\n\r\nexport default function Signup() {\r\n  const nameRef = useRef()\r\n  const emailRef = useRef()\r\n  const passwordRef = useRef()\r\n  const passwordConfirmRef = useRef()\r\n  const { signup, updateProfile } = useAuth()\r\n  const [error, setError] = useState(\"\")\r\n  const [loading, setLoading] = useState(false)\r\n  const history = useHistory()\r\n\r\n  //function for handling submitted sign up form\r\n  async function handleSubmit(e) {\r\n    e.preventDefault()  //prevent form from being refreshed\r\n\r\n    //validation for password\r\n    if (passwordRef.current.value !== passwordConfirmRef.current.value) {\r\n      return setError(\"Passwords do not match\")\r\n    }\r\n\r\n    const promises = []\r\n    setError(\"\")  //reset error message\r\n    setLoading(true)  //prevent form from being submitted multiple times\r\n\r\n    try {\r\n      //await - wait for signup to finish\r\n      await signup(emailRef.current.value, passwordRef.current.value) //create account      \r\n    } catch {\r\n      setError(\"Failed to create an account\")\r\n    }\r\n\r\n    //update display name\r\n    //promises.push(updateProfile(nameRef.current.value)) \r\n\r\n    //run all promises\r\n    Promise.all(promises)\r\n      .then(() => {\r\n        history.push(\"/\")  //return to dashboard\r\n      })\r\n      .catch(() => {\r\n        setError(\"Failed to update account\")\r\n      })\r\n      .finally(() => {\r\n        setLoading(false)\r\n        history.push('/')\r\n      })\r\n\r\n    setLoading(false)\r\n  }\r\n\r\n  return (\r\n    <>\r\n      <Container\r\n        className=\"d-flex align-items-center justify-content-center\"\r\n        style={{ minHeight: \"100vh\" }}\r\n      >\r\n        <div className=\"w-100\" style={{ maxWidth: \"400px\" }}>\r\n          <Card>\r\n            <Card.Body>\r\n              <h2 className=\"text-center mb-4\">Sign Up</h2>\r\n              {error && <Alert variant=\"danger\">{error}</Alert>}\r\n              <Form onSubmit={handleSubmit}>\r\n                <Form.Group id=\"email\">\r\n                  <Form.Control type=\"email\" ref={emailRef} placeholder=\"Enter your email\" required />\r\n                </Form.Group>\r\n                <Form.Group id=\"password\">\r\n                  <Form.Control type=\"password\" ref={passwordRef} placeholder=\"Enter your password\" required />\r\n                </Form.Group>\r\n                <Form.Group id=\"password-confirm\">\r\n                  <Form.Control type=\"password\" ref={passwordConfirmRef} placeholder=\"Repeat your password\" required />\r\n                </Form.Group>\r\n                <Button disabled={loading} className=\"w-100\" type=\"submit\">\r\n                  Sign Up\r\n            </Button>\r\n              </Form>\r\n            </Card.Body>\r\n          </Card>\r\n          <div className=\"w-100 text-center mt-2\">\r\n            Already have an account? <Link to=\"/login\">Log In</Link><br />\r\n            <Link to=\"/\">Back to Home</Link>\r\n          </div>\r\n        </div>\r\n      </Container>\r\n    </>\r\n  )\r\n}\r\n\r\n/*\r\nadd after line 68\r\n<Form.Group id=\"name\">\r\n              <Form.Control type=\"text\" ref={nameRef} placeholder=\"Enter your name\" required />\r\n            </Form.Group>\r\n            */","//login page\r\n\r\nimport React, { useRef, useState } from \"react\"\r\nimport { Container, Form, Button, Card, Alert } from \"react-bootstrap\"\r\nimport { useAuth } from \"../contexts/AuthContext\"\r\nimport { Link, useHistory } from \"react-router-dom\"\r\nimport \"bootstrap/dist/css/bootstrap.min.css\"\r\n\r\nexport default function Login() {\r\n  const emailRef = useRef()\r\n  const passwordRef = useRef()\r\n  const { login } = useAuth()\r\n  const [error, setError] = useState(\"\")\r\n  const [loading, setLoading] = useState(false)\r\n  const history = useHistory()\r\n\r\n  //function for handling submitted login form\r\n  async function handleSubmit(e) {\r\n    e.preventDefault()  //prevent form from being refreshed\r\n\r\n    try {\r\n      setError(\"\")  //reset error message\r\n      setLoading(true)  //prevent form from being submitted multiple times\r\n      //await - wait for login to finish\r\n      await login(emailRef.current.value, passwordRef.current.value)\r\n      history.push(\"/\") //navigate user to dashboard\r\n    } catch {\r\n      setError(\"Failed to log in\")\r\n    }\r\n\r\n    setLoading(false)\r\n  }\r\n\r\n  return (\r\n    <>    \r\n    <Container\r\n      className=\"d-flex align-items-center justify-content-center\"\r\n      style={{ minHeight: \"100vh\" }}\r\n    >\r\n      <div className=\"w-100\" style={{ maxWidth: \"400px\" }}>\r\n        <Card>\r\n          <Card.Body>\r\n            <h2 className=\"text-center mb-4\">Login</h2>\r\n            {error && <Alert variant=\"danger\">{error}</Alert>}\r\n            <Form onSubmit={handleSubmit}>\r\n              <Form.Group id=\"email\">\r\n                <Form.Label>Email address</Form.Label><br />\r\n                <Form.Control type=\"email\" placeholder=\"Enter your email address\" ref={emailRef} required />\r\n              </Form.Group>\r\n              <Form.Group id=\"password\">\r\n                <Form.Label>Password</Form.Label><br />\r\n                <Form.Control type=\"password\" placeholder=\"Enter your password\" ref={passwordRef} required />\r\n              </Form.Group>\r\n              <Button disabled={loading} className=\"w-100\" type=\"submit\">\r\n                Log In\r\n                  </Button>\r\n            </Form>\r\n            <div className=\"w-100 text-center mt-3\">\r\n              <Link to=\"/forgot-password\">Forgot Password?</Link>\r\n            </div>\r\n          </Card.Body>\r\n        </Card>\r\n        <div className=\"w-100 text-center mt-2\">\r\n          Need an account? <Link to=\"/signup\">Sign Up</Link><br />\r\n          <Link to=\"/\">Back to Home</Link>\r\n        </div>\r\n      </div>\r\n    </Container>\r\n    </>\r\n  )\r\n}","//resetting password through email\r\n\r\nimport React, { useRef, useState } from \"react\"\r\nimport { Container, Form, Button, Card, Alert } from \"react-bootstrap\"\r\nimport { useAuth } from \"../contexts/AuthContext\"\r\nimport { Link } from \"react-router-dom\"\r\n\r\nexport default function ForgotPassword() {\r\n  const emailRef = useRef()\r\n  const { resetPassword } = useAuth()\r\n  const [error, setError] = useState(\"\")\r\n  const [message, setMessage] = useState(\"\")\r\n  const [loading, setLoading] = useState(false)\r\n\r\n  //function to handle submitted forgot password form\r\n  async function handleSubmit(e) {\r\n    e.preventDefault()  //prevent form from being refreshed\r\n\r\n    try {\r\n      setMessage(\"\")\r\n      setError(\"\")\r\n      setLoading(true)\r\n      await resetPassword(emailRef.current.value)\r\n      setMessage(\"Check your inbox for further instructions\") //message for successfully sent email\r\n    } catch {\r\n      setError(\"Failed to reset password\")\r\n    }\r\n\r\n    setLoading(false)\r\n  }\r\n\r\n  return (\r\n    <>\r\n      <Container\r\n        className=\"d-flex align-items-center justify-content-center\"\r\n        style={{ minHeight: \"100vh\" }}\r\n      >\r\n        <div className=\"w-100\" style={{ maxWidth: \"400px\" }}>\r\n          <Card>\r\n            <Card.Body>\r\n              <h2 className=\"text-center mb-4\">Password Reset</h2>\r\n              {error && <Alert variant=\"danger\">{error}</Alert>}\r\n              {message && <Alert variant=\"success\">{message}</Alert>}\r\n              <Form onSubmit={handleSubmit}>\r\n                <Form.Group id=\"email\">\r\n                  <Form.Label>Email address</Form.Label>\r\n                  <Form.Control type=\"email\" placeholder=\"Enter your email address\" ref={emailRef} required />\r\n                </Form.Group>\r\n                <Button disabled={loading} className=\"w-100\" type=\"submit\">\r\n                  Reset Password\r\n            </Button>\r\n              </Form>\r\n              <div className=\"w-100 text-center mt-3\">\r\n                <Link to=\"/login\">Cancel</Link>\r\n              </div>\r\n            </Card.Body>\r\n          </Card>\r\n        </div>\r\n      </Container>\r\n    </>\r\n  )\r\n}\r\n","//dashboard page after user signs in\r\n//line 16 to 18 is where you add pathname as written in app.js (add after path: \"/)\r\n\r\nimport React from \"react\"\r\nimport { useAuth } from \"../contexts/AuthContext\"\r\nimport { IconButton, AppBar, Toolbar, List, ListItem, ListItemText } from \"@material-ui/core\"\r\nimport { ExitToApp } from \"@material-ui/icons\"\r\nimport { useHistory } from \"react-router-dom\"\r\n\r\nexport default function Dashboard() {\r\n  const { currentUser, logout } = useAuth()\r\n  const history = useHistory()\r\n\r\n  const navLinks = [\r\n    { title: \"Dashboard\", path: \"/\" },\r\n    { title: \"Tasks\", path: \"/\" },\r\n    { title: \"Board\", path: \"/\" },\r\n    { title: \"Timer\", path: \"/timer\" },\r\n    { title: \"Account\", path: \"/edit-profile\" }\r\n  ]\r\n\r\n  //function to handle logout\r\n  async function handleLogout() {\r\n    try {\r\n      await logout()\r\n      history.push(\"/login\")   //navigate to login page\r\n    } catch {\r\n      console.log(\"Failed to log out\")\r\n    }\r\n  }\r\n\r\n  return (\r\n    <>\r\n      <AppBar id=\"navbar\" >\r\n        <Toolbar id=\"navflex\">\r\n          Noto\r\n          <List id=\"navlink\">\r\n            {navLinks.map(({ title, path }) => (\r\n              <a href={path} key={title}>\r\n                <ListItem>\r\n                  <ListItemText primary={title} />\r\n                </ListItem>\r\n              </a>\r\n            ))}\r\n          </List>\r\n          <List>\r\n            <ListItem>\r\n              <IconButton color=\"inherit\"  onClick={handleLogout}>\r\n                <ExitToApp />\r\n              </IconButton>\r\n            </ListItem>\r\n          </List>\r\n        </Toolbar>\r\n      </AppBar>\r\n    </>\r\n  )\r\n}\r\n","//edit profile - name or password\r\n\r\nimport React, { useRef, useState } from \"react\"\r\nimport { Container, Form, Button, Card, Alert } from \"react-bootstrap\"\r\nimport { useAuth } from \"../contexts/AuthContext\"\r\nimport { Link, useHistory } from \"react-router-dom\"\r\n\r\nexport default function EditProfile() {\r\n  const nameRef = useRef()\r\n  const passwordRef = useRef()\r\n  const passwordConfirmRef = useRef()\r\n  const { currentUser, updatePassword, updateProfile } = useAuth()\r\n  const [error, setError] = useState(\"\")\r\n  const [loading, setLoading] = useState(false)\r\n  const history = useHistory()\r\n\r\n  //function to handle submitted update profile form\r\n  function handleSubmit(e) {\r\n    e.preventDefault()  //prevent form from being refreshed\r\n\r\n    //password validation\r\n    if (passwordRef.current.value !== passwordConfirmRef.current.value) {\r\n      return setError(\"Passwords do not match\")\r\n    }\r\n\r\n    const promises = []\r\n    setLoading(true)\r\n    setError(\"\")\r\n\r\n    //udpdate name and password\r\n    if (nameRef.current.value !== currentUser.displayName) {\r\n      promises.push(updateProfile(nameRef.current.value))\r\n    }\r\n    if (passwordRef.current.value) {\r\n      promises.push(updatePassword(passwordRef.current.value))\r\n    }\r\n\r\n    //run all promises\r\n    Promise.all(promises)\r\n      .then(() => {\r\n        history.push(\"/\")  //return to dashboard\r\n      })\r\n      .catch(() => {\r\n        setError(\"Failed to update account\")\r\n      })\r\n      .finally(() => {\r\n        setLoading(false)\r\n      })\r\n  }\r\n\r\n  return (\r\n    <>\r\n      <Container\r\n        className=\"d-flex align-items-center justify-content-center\"\r\n        style={{ minHeight: \"100vh\" }}\r\n      >\r\n        <div className=\"w-100\" style={{ maxWidth: \"400px\" }}>\r\n          <Card>\r\n            <Card.Body>\r\n              <h2 className=\"text-center mb-4\">Edit Profile</h2>\r\n              {error && <Alert variant=\"danger\">{error}</Alert>}\r\n              {error && <Alert variant=\"danger\">{error}</Alert>}\r\n              <Form onSubmit={handleSubmit}>\r\n                <Form.Group id=\"name\">\r\n                  <Form.Label>Name</Form.Label><br />\r\n                  <Form.Control\r\n                    type=\"text\"\r\n                    ref={nameRef}\r\n                    required\r\n                    defaultValue={currentUser.displayName}\r\n                  />\r\n                </Form.Group>\r\n                <Form.Group id=\"password\">\r\n                  <Form.Label>Password</Form.Label><br />\r\n                  <Form.Control\r\n                    type=\"password\"\r\n                    ref={passwordRef}\r\n                    placeholder=\"Leave blank to remain unchanged\"\r\n                  />\r\n                </Form.Group>\r\n                <Form.Group id=\"password-confirm\">\r\n                  <Form.Label>Password Confirmation</Form.Label><br />\r\n                  <Form.Control\r\n                    type=\"password\"\r\n                    ref={passwordConfirmRef}\r\n                    placeholder=\"Leave blank to remain unchanged\"\r\n                  />\r\n                </Form.Group>\r\n                <Button disabled={loading} className=\"w-100\" type=\"submit\">\r\n                  Update\r\n            </Button>\r\n              </Form>\r\n            </Card.Body>\r\n          </Card>\r\n          <div className=\"w-100 text-center mt-2\">\r\n            <Link to=\"/\">Cancel</Link>\r\n          </div>\r\n        </div>\r\n      </Container>\r\n    </>\r\n  )\r\n}\r\n","import React from 'react';\r\nimport Title from 'react-title-component';\r\nimport { AwesomeButton } from 'react-awesome-button';\r\nimport Button from '@material-ui/core/Button';\r\nimport AssessmentIcon from '@material-ui/icons/Assessment';\r\nimport Dashboard from './Dashboard'\r\nimport \"react-awesome-button/dist/styles.css\";\r\nimport '../timer.css';\r\n\r\nexport default class TimerPage extends React.Component{\r\n    constructor() {\r\n        super();\r\n        this.state = {\r\n          time: 0,\r\n          play: false,\r\n          timeType: 0,\r\n          title: '',\r\n          estimated: false\r\n        };\r\n        // Bind early, avoid function creation on render loop\r\n        this.setTimeForCode = this.setTime.bind(this, 1500);\r\n        this.setTimeForSocial = this.setTime.bind(this, 300);\r\n        this.setTimeForCoffee = this.setTime.bind(this, 900);\r\n        this.reset = this.reset.bind(this);\r\n        this.play = this.play.bind(this);\r\n        this.elapseTime = this.elapseTime.bind(this);\r\n    }\r\n\r\n    componentDidMount() {\r\n        this.setDefaultTime();\r\n        Notification.requestPermission();\r\n    }\r\n\r\n    elapseTime() {\r\n        if (this.state.time === 0) {\r\n          this.reset(0);\r\n          this.alert();\r\n        }\r\n        if (this.state.play === true) {\r\n          let newState = this.state.time - 1;\r\n          this.setState({time: newState, title: this.getTitle(newState)});\r\n        }\r\n      }\r\n\r\n    format(seconds) {\r\n        let m = Math.floor(seconds % 3600 / 60);\r\n        let s = Math.floor(seconds % 3600 % 60);\r\n        let timeFormated = (m < 10 ? \"0\" : \"\") + m + \":\" + (s < 10 ? \"0\" : \"\") + s;\r\n        return timeFormated;\r\n    }\r\n\r\n    getFormatTypes() {\r\n        return [\r\n          {type: \"code\", time: 1500},\r\n          {type: \"social\", time: 300},\r\n          {type: \"coffee\", time: 900}\r\n        ];\r\n    }\r\n    \r\n    formatType(timeType) {\r\n        let timeTypes = this.getFormatTypes();\r\n        for(let i=0; i<timeTypes.length; i++) {\r\n          let timeObj = timeTypes[i];\r\n          if(timeObj.time === timeType) {\r\n            return timeObj.type;\r\n          }\r\n        }\r\n        return null;\r\n    }\r\n    \r\n    restartInterval() {\r\n        clearInterval(this.interval);\r\n        this.interval = setInterval(this.elapseTime, 1000);\r\n    }\r\n    \r\n    play() {\r\n        if (true === this.state.play) return; \r\n    \r\n        this.restartInterval();\r\n        \r\n        this.setState({ \r\n          play: true \r\n        });\r\n    }\r\n    \r\n    reset(resetFor = this.state.time) {\r\n        clearInterval(this.interval);\r\n        let time = this.format(resetFor);\r\n        this.setState({play: false});\r\n    }\r\n    \r\n    togglePlay() {\r\n        if (true === this.state.play)\r\n          return this.reset();\r\n    \r\n        return this.play();\r\n    }\r\n    \r\n    setTime(newTime) {\r\n        this.restartInterval();\r\n        \r\n        this.setState({\r\n          time: newTime, \r\n          timeType: newTime, \r\n          title: this.getTitle(newTime), \r\n          play: true,\r\n          estimated: false\r\n        });\r\n    }\r\n    \r\n    setDefaultTime() {\r\n        let defaultTime = 1500;\r\n    \r\n        this.setState({\r\n          time: defaultTime, \r\n          timeType: defaultTime, \r\n          title: this.getTitle(defaultTime), \r\n          play: false,\r\n          estimated: false\r\n        });\r\n    }\r\n    \r\n    getTitle(time) {\r\n        time = typeof time === 'undefined' ? this.state.time : time;\r\n        let _title = this.format(time) + ' | Pomodoro timer';\r\n        return _title;\r\n    }\r\n    \r\n    \r\n    toggleMode(gotoDirection) {\r\n        let timeTypes = this.getFormatTypes();\r\n        let currentPosition = -1;\r\n    \r\n    \r\n        for (let i = 0; i < timeTypes.length; i++) {\r\n          if (timeTypes[i].time === this.state.timeType) {\r\n            currentPosition = i;\r\n            break;\r\n          };\r\n        };\r\n    \r\n        if (currentPosition !== -1) {\r\n          let newMode = timeTypes[currentPosition + gotoDirection];\r\n          if (newMode) this.setTime(newMode.time);\r\n        };\r\n    }\r\n    \r\n    _setLocalStorage (item, element) {\r\n        let value = element.target.checked;\r\n        localStorage.setItem('react-pomodoro-' + item, value);\r\n    }\r\n    \r\n    _getLocalStorage (item) {\r\n        return (localStorage.getItem('react-pomodoro-' + item) == 'true') ? true : false;\r\n    }\r\n    \r\n    alert() {\r\n        // vibration\r\n        if(this.refs.vibrate.checked) {\r\n          window.navigator.vibrate(1000);\r\n        }\r\n        // audio\r\n        if(this.refs.audio.checked) {\r\n          let audio = new Audio('songs/alarm.mp3');\r\n          audio.play();\r\n          setTimeout(()=> audio.pause(), 1400);\r\n        }\r\n        // notification\r\n        if(this.refs.notification.checked) {\r\n          if (this.state.timeType === 1500) {\r\n            let notification = new Notification(\"Relax :)\", {\r\n              icon: \"img/coffee.png\",\r\n              lang: \"en\",\r\n              body: \"Go talk or drink a coffee.\"\r\n            });\r\n          } else {\r\n            let notification = new Notification(\"The time is over!\", {\r\n              icon: \"img/code.png\",\r\n              lang: \"en\",\r\n              body: \"Hey, back to code!\"\r\n            });\r\n          }\r\n        }\r\n    }\r\n\r\n    estimatedTime(){\r\n        // var type = this.getTimerType();\r\n        var time;\r\n\r\n        var today = new Date();\r\n        var minutes;\r\n\r\n        // if(1500===type){\r\n        //     minutes=25;\r\n        // }\r\n        // else if(300===type){\r\n        //     minutes=5;\r\n        // }\r\n        // else{\r\n        //     minutes=15;\r\n        // }\r\n\r\n        // let twentyMinutesLater = new Date(today.getTime() + (minutes*60*1000))\r\n        // console.log(twentyMinutesLater);\r\n \r\n        // time = twentyMinutesLater.getHours()+\":\";\r\n\r\n        // if(twentyMinutesLater.getMinutes()<10){\r\n        //     time = time + \"0\" + twentyMinutesLater.getMinutes();\r\n        // }\r\n        // else{\r\n        //     time = time + twentyMinutesLater.getMinutes();\r\n        // }\r\n\r\n        console.log(\"hi\")\r\n\r\n        // return time;\r\n    }\r\n\r\n    render(){\r\n        return(\r\n            <div className=\"container\">\r\n                <Title render={this.state.title} />\r\n                <div>\r\n                    <Dashboard></Dashboard>\r\n                </div>\r\n                <div className=\"reportButtonContainer\">\r\n                    <Button\r\n                        variant=\"outlined\"\r\n                        startIcon={<AssessmentIcon />}\r\n                    >\r\n                        Report\r\n                    </Button>\r\n                </div>\r\n                <div className=\"timerContainer\">\r\n                    <div className=\"timerMain\">\r\n                        <div className=\"timerControlButton\">\r\n                            <AwesomeButton type=\"secondary\" onPress={this.setTimeForCode}>Pomodoro</AwesomeButton>\r\n                            <AwesomeButton type=\"secondary\" onPress={this.setTimeForSocial}>Short Break</AwesomeButton>\r\n                            <AwesomeButton type=\"secondary\" onPress={this.setTimeForCoffee}>Long Break</AwesomeButton>\r\n                        </div>\r\n                        <div className={\"timerCountdown\"}>\r\n                            <span className=\"time\">{this.format(this.state.time)}</span>\r\n                        </div>\r\n                        <div className={\"timerEstimated\"}>\r\n                            <h5></h5>\r\n                        </div>\r\n                    </div>\r\n                    <div className={\"timerCenter\"}>\r\n                        <button className={\"startButton\"} onClick={this.play}>START</button>\r\n                        <button className={\"stopButton\"} onClick={this.reset}>STOP</button>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n}","//overall settings for page navigation\r\n\r\nimport React from \"react\"\r\nimport { AuthProvider } from \"../contexts/AuthContext\"\r\nimport { BrowserRouter as Router, Switch, Route } from \"react-router-dom\"\r\nimport PrivateRoute from \"./PrivateRoute\" //to prevent unauthorised access of pages\r\nimport Signup from \"./Signup\"\r\nimport Login from \"./Login\"\r\nimport ForgotPassword from \"./ForgotPassword\"\r\nimport Dashboard from \"./Dashboard\"\r\nimport EditProfile from \"./EditProfile\"\r\nimport Timer from './Timer'\r\n\r\n//1.import page function from .js file to section above ^^^ 1 line = 1 page\r\n//2.create new privateroute path (means can access after login only)\r\n// pathname can be any\r\n// component = js function name (best if function name = .js file name to avoid confusion)\r\n\r\nfunction App() {\r\n  return (\r\n    <Router>\r\n      <AuthProvider>\r\n        <Switch>\r\n          <PrivateRoute exact path=\"/\" component={Dashboard} />\r\n          <PrivateRoute path=\"/edit-profile\" component={EditProfile} />\r\n          <PrivateRoute path=\"/timer\" component={Timer}/>\r\n          <Route path=\"/signup\" component={Signup} />\r\n          <Route path=\"/login\" component={Login} />\r\n          <Route path=\"/forgot-password\" component={ForgotPassword} />\r\n        </Switch>\r\n      </AuthProvider>\r\n    </Router>\r\n  )\r\n}\r\n\r\nexport default App\r\n","import React from \"react\"\r\nimport ReactDOM from \"react-dom\"\r\nimport App from \"./components/App\"\r\nimport \"./App.css\"\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <App />\r\n  </React.StrictMode>,\r\n  document.getElementById(\"root\")\r\n)\r\n"],"sourceRoot":""}